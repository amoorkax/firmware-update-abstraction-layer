# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  config.ssh.extra_args = ["-o", "ServerAliveInterval=2", "-o", "ServerAliveCountMax=5"]

  config.vm.box = "generic/ubuntu2204"
  config.vm.synced_folder '.', '/vagrant', disabled: true

  config.vm.provider :libvirt do |domain|
      domain.memory = 4196
      domain.cpus = 4
  end
  config.vm.provider :libvirt do |libvirt|
      libvirt.driver = 'kvm'
  end

  config.vm.provision "shell", inline: <<-SHELL
    set -e
    set -x
    sed -i "s/Cache=.*/Cache=yes/g" /etc/systemd/resolved.conf
    sed -i "s/DNS=.*/DNS=10.248.2.1 10.22.224.196 10.3.86.116/g" /etc/systemd/resolved.conf
    sed -i "s/FallbackDNS=.*/FallbackDNS=10.248.2.1 10.22.224.196 10.3.86.116/g" /etc/systemd/resolved.conf
    sed -i "s/DNSStubListener=.*/DNSStubListener=no/g" /etc/systemd/resolved.conf
    systemctl restart systemd-resolved

    cat >/etc/apt/apt.conf <<EOF
Acquire::http::proxy "http://proxy-dmz.intel.com:911/";
Acquire::https::proxy "http://proxy-dmz.intel.com:912/";
EOF
    export https_proxy=http://proxy-dmz.intel.com:912/
    echo "http_proxy=http://proxy-dmz.intel.com:911/" >>/etc/environment
    echo "HTTP_PROXY=http://proxy-dmz.intel.com:911/" >>/etc/environment
    echo "https_proxy=http://proxy-dmz.intel.com:912/" >>/etc/environment
    echo "HTTPS_proxy=http://proxy-dmz.intel.com:912/" >>/etc/environment
    echo "no_proxy=intel.com,127.0.0.1,localhost" >>/etc/environment
    echo "NO_PROXY=intel.com,127.0.0.1,localhost" >>/etc/environment
    echo 'APT::Periodic::Update-Package-Lists "0";'  >/etc/apt/apt.conf.d/20auto-upgrades
    echo 'APT::Periodic::Update-Package-Lists "0";' >>/etc/apt/apt.conf.d/20auto-upgrades
    echo 'APT::Periodic::Download-Upgradeable-Packages "0";' >>/etc/apt/apt.conf.d/20auto-upgrades
    echo 'APT::Periodic::AutocleanInterval "0";' >>/etc/apt/apt.conf.d/20auto-upgrades
    echo 'APT::Periodic::Unattended-Upgrade "0";' >>/etc/apt/apt.conf.d/20auto-upgrades
    ex -s -c '%s/security.ubuntu.com\\/ubuntu/linux-ftp.jf.intel.com\\/pub\\/mirrors\\/ubuntu/g' /etc/apt/sources.list || ex -s -c '%s/mirrors.edge.kernel.org\\/ubuntu/linux-ftp.jf.intel.com\\/pub\\/mirrors\\/ubuntu/g' /etc/apt/sources.list
    touch /etc/apt/apt.conf.d/proxy.conf
    echo 'Acquire::http::Proxy "http://proxy-dmz.intel.com:911/";' >/etc/apt/apt.conf.d/proxy.conf
    echo 'Acquire::https::Proxy "http://proxy-dmz.intel.com:911/";' >>/etc/apt/apt.conf.d/proxy.conf
    cat /etc/apt/sources.list

    rm -rf /var/lib/apt/lists/*

    mkdir -p /var/log/journal
    systemd-tmpfiles --create --prefix /var/log/journal
    time systemctl restart systemd-journald

    # disable slow time sync
    sudo timedatectl set-ntp no
  SHELL

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder './input', '/vagrant/input', id: 'input', type: 'rsync'
  config.vm.synced_folder './test', '/test', id: 'test', type: 'rsync'
  config.vm.synced_folder './scripts', '/scripts', id: 'scripts', type: 'rsync'

  #config.vm.provision "shell", inline: <<-SHELL
  #  apt-get update && /test/intel-cert-setup-debian.sh
  #SHELL

  # following line is a workaround for a Vagrant bug (run never not working)
  #if ARGV.include? '--provision-with'
  #  config.vm.provision "fota_good_ami_test_preboot", type: "shell", run: "never",
 #     path: "./test/fota/FOTA_GOOD_AMI_TEST_preboot.sh"
#
#    config.vm.provision "fota_good_ami_test_postboot", type: "shell", run: "never",
#      path: "./test/fota/FOTA_GOOD_AMI_TEST_postboot.sh"

#  end
end
